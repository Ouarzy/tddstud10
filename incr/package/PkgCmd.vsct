<?xml version="1.0" encoding="utf-8"?>

<!--

Copyright (c) Microsoft Corporation. All rights reserved.
THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.

-->

<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!-- Definition of the command and menus used by this sample -->
  <Extern href="stdidcmd.h" />
  <Extern href="vsshlids.h" />

  <!-- Commands definition for the client package -->
  <Commands package="guidClientPkg">
    <!--  Buttons (commands) defined by the package.
          This section defines the elements the user can interact with, like a menu command or a button
          or combo box in a toolbar. -->
    <Buttons>
      <!-- An element inside this section is defined by its ID and must specify a parent group, a display
           priority, an image, a type, some visibility flags (optional) and a default text. -->
      <Button guid="guidClientCmdSet" id="cmdidUiEventsWindow" priority="0x101" type="Button">
        <Parent guid="guidSHLMainMenu" id="IDG_VS_FILE_FILE" />
        <Icon guid="guidImagesBmp" id="bmpPic2" />
        <Strings>
          <ButtonText>I&amp;ncremental Builds Prototype</ButtonText>
        </Strings>
      </Button>
      <!--The menu items will be placed in one of the first group of the View->Other Windows menu. To
      find IDG_VS_WNDO_OTRWNDWS1 (which is the group ID), we searched ShellCmdPlace.ctc for Other
      Windows from which we got the IDM_VS_CSCD_WINDOWS menu, and searching for that showed us 
      which groups were already part of that menu. Of those we picked IDG_VS_WNDO_OTRWNDWS1. -->
    </Buttons>

    <!--The bitmaps section is used to define the bitmaps that are used for the commands. -->
    <Bitmaps>
      <!-- The bitmap id is defined in a way that is a little bit different from the others: 
       the declaration starts with a guid for the bitmap strip, then there is the resource id of the 
       bitmap strip containing the bitmaps and then there are the numeric ids of the elements used 
       inside a button definition. An important aspect of this declaration is that the element id 
       must be the actual index (1-based) of the bitmap inside the bitmap strip. -->
      <Bitmap guid="guidImagesBmp" href="Images.png" usedList="bmpPic1, bmpPic2, bmpPicSmile, bmpPicX, bmpPicRefresh" />
    </Bitmaps>
  </Commands>

  <Symbols>
    <!--
    The definition of symbols in a VSCT file derives from the way the IDs of the elements are defined
    by the command table. We have seen that the ID is a GUID/Number pair, where the GUID is also called
    Command Set and it provides the context in which the numeric ID is evaluated.
    It makes then sense for the VSCT schema to define the GuidSymbl tag as top level element containig
    the definiton of the numeric IDs.
    -->

    <!--The first GUID defined here is the one for the package. It does not contains numeric IDs.-->
    <GuidSymbol name="guidClientPkg" value="{01069CDD-95CE-4620-AC21-DDFF6C57F012}" />

    <!--The GUID for the command set is the one that contains the numeric IDs used in this sample
        with the only exception of the one used for the bitmap.-->
    <GuidSymbol name="guidClientCmdSet" value="{1227033A-2F60-4bd6-8208-B43EC8C12510}">
      <!--Commands-->
      <IDSymbol name="cmdidUiEventsWindow" value="0x2002" />
    </GuidSymbol>

    <!--Last is the definition of the GUID used for the Bitmap and the ID of its used slots.-->
    <GuidSymbol name="guidImagesBmp" value="{DF2F3CBE-874F-42ab-999E-456C86F6033C}">
      <IDSymbol name="bmpPic1" value="1" />
      <IDSymbol name="bmpPic2" value="2" />
      <IDSymbol name="bmpPicSmile" value="3" />
      <IDSymbol name="bmpPicX" value="4" />
      <IDSymbol name="bmpPicRefresh" value="5" />
    </GuidSymbol>
  </Symbols>
</CommandTable>
