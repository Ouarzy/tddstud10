<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vs="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.12.0"
  xmlns:pui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.12.0">

  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
  </Style>

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z" />
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Background" Value="#00FFFFFF" />
    <Setter Property="Control.Foreground" Value="#00FFFFFF" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static vs:VsBrushes.ToolWindowTextKey}}" />
    <Setter Property="Control.BorderThickness" Value="1.5" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border HorizontalAlignment="Center" VerticalAlignment="Center" Background="{TemplateBinding Control.Background}" Padding="5,5,5,5">
            <Path Name="ExpandPath" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Control.Foreground}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="{TemplateBinding Control.BorderThickness}" Data="{StaticResource TreeArrow}" UseLayoutRounding="True">
              <Path.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                </Setter.Value>
              </Setter>
              <Setter Value="{DynamicResource {x:Static vs:VsBrushes.ToolWindowTextKey}}" Property="Control.Foreground" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemActiveBrushKey}}" Property="Control.BorderBrush" />
            </Trigger>
            <MultiTrigger >
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="True" />
                <Condition Property="ToggleButton.IsChecked" Value="True" />
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemActiveBrushKey}}" Property="Control.Foreground" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
    <Setter Property="Background" Value="{DynamicResource {x:Static vs:VsBrushes.ToolWindowBackgroundKey}}" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static vs:VsBrushes.ToolWindowTextKey}}" />
    <Setter Property="BorderThickness" Value="0"></Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
  </Style>

  <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Foreground"  Value="{DynamicResource {x:Static vs:VsBrushes.ToolWindowTextKey}}" />
    <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
    <Setter Property="Padding" Value="2"></Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemActiveTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemActiveBrushKey}}" Property="Border.Background" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true"/>
                <Condition Property="IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemInactiveTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static pui:TreeViewColors.SelectedItemInactiveBrushKey}}" Property="Border.Background" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>